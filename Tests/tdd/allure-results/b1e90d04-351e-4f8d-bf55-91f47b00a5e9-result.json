{"name": "test_demo", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a class=\"nav-item nav-link\" id=\"products\" href=\"/products\">...</a> is not clickable at point (999, 28). Other element would receive the click: <span>...</span>\n  (Session info: chrome=132.0.6834.160)\nStacktrace:\n\tGetHandleVerifier [0x00007FF6AD7F02F5+28725]\n\t(No symbol) [0x00007FF6AD752AE0]\n\t(No symbol) [0x00007FF6AD5E510A]\n\t(No symbol) [0x00007FF6AD6410F8]\n\t(No symbol) [0x00007FF6AD63EB42]\n\t(No symbol) [0x00007FF6AD63BC51]\n\t(No symbol) [0x00007FF6AD63ABB1]\n\t(No symbol) [0x00007FF6AD62C6B4]\n\t(No symbol) [0x00007FF6AD65FFAA]\n\t(No symbol) [0x00007FF6AD62BF86]\n\t(No symbol) [0x00007FF6AD6601C0]\n\t(No symbol) [0x00007FF6AD680181]\n\t(No symbol) [0x00007FF6AD65FD53]\n\t(No symbol) [0x00007FF6AD62A0E3]\n\t(No symbol) [0x00007FF6AD62B471]\n\tGetHandleVerifier [0x00007FF6ADB1F30D+3366989]\n\tGetHandleVerifier [0x00007FF6ADB312F0+3440688]\n\tGetHandleVerifier [0x00007FF6ADB278FD+3401277]\n\tGetHandleVerifier [0x00007FF6AD8BAAAB+858091]\n\t(No symbol) [0x00007FF6AD75E74F]\n\t(No symbol) [0x00007FF6AD75A304]\n\t(No symbol) [0x00007FF6AD75A49D]\n\t(No symbol) [0x00007FF6AD748B69]\n\t(No symbol) [0x00007FFF87547374]\n\tRtlUserThreadStart [0x00007FFF8827CC91+33]", "trace": "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"67bbe6a96db9a87779d63902b89db101\")>\n\n    @allure.feature('UI Tests')\n    @allure.story('Demo Test')\n    def test_demo(driver):\n        with allure.step(\"Launch browser and navigate to demo website\"):\n            commonUISteps.CommonUISteps.launch_web_browser(driver, \"https://practise.usemango.co.uk/\")\n    \n        with allure.step(\"Go to 'Products' page\"):\n            commonUISteps.CommonUISteps.click(driver, (By.XPATH, \"//*[@id='products']\"))\n    \n        with allure.step(\"Add laptop to basket\"):\n            commonUISteps.CommonUISteps.click(driver, (By.XPATH, \"//*[@id='root']/div/div/div[2]/div[4]/div/div/div/div/a[2]\"))\n    \n        with allure.step(\"Click search bar and enter product name\"):\n            element = commonUISteps.CommonUISteps.wait_for_clickability(driver, (By.XPATH, \"//*[@id='searchproduct']\"), timeout=10)\n>           commonUISteps.CommonUISteps.click(driver, (By.XPATH, \"//*[@id='products']\"))\n\ntest_sample.py:37: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n..\\..\\uiAutomation\\commonUISteps.py:41: in click\n    element.click()\n..\\..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n..\\..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n..\\..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000011E9AE026B0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...bol) [0x00007FF6AD748B69]\\\\n\\\\t(No symbol) [0x00007FFF87547374]\\\\n\\\\tRtlUserThreadStart [0x00007FFF8827CC91+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a class=\"nav-item nav-link\" id=\"products\" href=\"/products\">...</a> is not clickable at point (999, 28). Other element would receive the click: <span>...</span>\nE         (Session info: chrome=132.0.6834.160)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF6AD7F02F5+28725]\nE       \t(No symbol) [0x00007FF6AD752AE0]\nE       \t(No symbol) [0x00007FF6AD5E510A]\nE       \t(No symbol) [0x00007FF6AD6410F8]\nE       \t(No symbol) [0x00007FF6AD63EB42]\nE       \t(No symbol) [0x00007FF6AD63BC51]\nE       \t(No symbol) [0x00007FF6AD63ABB1]\nE       \t(No symbol) [0x00007FF6AD62C6B4]\nE       \t(No symbol) [0x00007FF6AD65FFAA]\nE       \t(No symbol) [0x00007FF6AD62BF86]\nE       \t(No symbol) [0x00007FF6AD6601C0]\nE       \t(No symbol) [0x00007FF6AD680181]\nE       \t(No symbol) [0x00007FF6AD65FD53]\nE       \t(No symbol) [0x00007FF6AD62A0E3]\nE       \t(No symbol) [0x00007FF6AD62B471]\nE       \tGetHandleVerifier [0x00007FF6ADB1F30D+3366989]\nE       \tGetHandleVerifier [0x00007FF6ADB312F0+3440688]\nE       \tGetHandleVerifier [0x00007FF6ADB278FD+3401277]\nE       \tGetHandleVerifier [0x00007FF6AD8BAAAB+858091]\nE       \t(No symbol) [0x00007FF6AD75E74F]\nE       \t(No symbol) [0x00007FF6AD75A304]\nE       \t(No symbol) [0x00007FF6AD75A49D]\nE       \t(No symbol) [0x00007FF6AD748B69]\nE       \t(No symbol) [0x00007FFF87547374]\nE       \tRtlUserThreadStart [0x00007FFF8827CC91+33]\n\n..\\..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: ElementClickInterceptedException"}, "steps": [{"name": "Launch browser and navigate to demo website", "status": "passed", "start": 1738758948875, "stop": 1738758950505}, {"name": "Go to 'Products' page", "status": "passed", "start": 1738758950506, "stop": 1738758950886}, {"name": "Add laptop to basket", "status": "passed", "start": 1738758950886, "stop": 1738758951612}, {"name": "Click search bar and enter product name", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a class=\"nav-item nav-link\" id=\"products\" href=\"/products\">...</a> is not clickable at point (999, 28). Other element would receive the click: <span>...</span>\n  (Session info: chrome=132.0.6834.160)\nStacktrace:\n\tGetHandleVerifier [0x00007FF6AD7F02F5+28725]\n\t(No symbol) [0x00007FF6AD752AE0]\n\t(No symbol) [0x00007FF6AD5E510A]\n\t(No symbol) [0x00007FF6AD6410F8]\n\t(No symbol) [0x00007FF6AD63EB42]\n\t(No symbol) [0x00007FF6AD63BC51]\n\t(No symbol) [0x00007FF6AD63ABB1]\n\t(No symbol) [0x00007FF6AD62C6B4]\n\t(No symbol) [0x00007FF6AD65FFAA]\n\t(No symbol) [0x00007FF6AD62BF86]\n\t(No symbol) [0x00007FF6AD6601C0]\n\t(No symbol) [0x00007FF6AD680181]\n\t(No symbol) [0x00007FF6AD65FD53]\n\t(No symbol) [0x00007FF6AD62A0E3]\n\t(No symbol) [0x00007FF6AD62B471]\n\tGetHandleVerifier [0x00007FF6ADB1F30D+3366989]\n\tGetHandleVerifier [0x00007FF6ADB312F0+3440688]\n\tGetHandleVerifier [0x00007FF6ADB278FD+3401277]\n\tGetHandleVerifier [0x00007FF6AD8BAAAB+858091]\n\t(No symbol) [0x00007FF6AD75E74F]\n\t(No symbol) [0x00007FF6AD75A304]\n\t(No symbol) [0x00007FF6AD75A49D]\n\t(No symbol) [0x00007FF6AD748B69]\n\t(No symbol) [0x00007FFF87547374]\n\tRtlUserThreadStart [0x00007FFF8827CC91+33]\n\n", "trace": "  File \"C:\\Users\\kebba.mm\\OneDrive - Infuse Consulting Limited\\Desktop\\PythonAutoFramework\\Tests\\tdd\\test_sample.py\", line 37, in test_demo\n    commonUISteps.CommonUISteps.click(driver, (By.XPATH, \"//*[@id='products']\"))\n  File \"C:\\Users\\kebba.mm\\OneDrive - Infuse Consulting Limited\\Desktop\\PythonAutoFramework\\uiAutomation\\commonUISteps.py\", line 41, in click\n    element.click()\n  File \"C:\\Users\\kebba.mm\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"C:\\Users\\kebba.mm\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n  File \"C:\\Users\\kebba.mm\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 354, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\kebba.mm\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1738758951612, "stop": 1738758953370}], "start": 1738758948874, "stop": 1738758953390, "uuid": "31dbd4b5-86fb-4821-8b0b-8a95d9251cc8", "historyId": "8c64860c0a8023918b6e3868d99d332b", "testCaseId": "8c64860c0a8023918b6e3868d99d332b", "fullName": "test_sample#test_demo", "labels": [{"name": "feature", "value": "UI Tests"}, {"name": "story", "value": "Demo Test"}, {"name": "suite", "value": "test_sample"}, {"name": "host", "value": "IITP072"}, {"name": "thread", "value": "27028-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_sample"}]}